{"version":3,"sources":["assets/cover.png","assets/aceHeart1p.png","assets/twoHeart.png","assets/threeHeart.png","assets/fourHeart.png","assets/fiveHeart.png","assets/sixHeart.png","assets/sevenHeart.png","assets/eightHeart.png","assets/nineHeart.png","assets/jackHeart.png","assets/kingHeart.png","assets/queenHeart.png","assets/aceSpade.png","assets/kingSpades.png","assets/queenSpade.png","assets/tenSpade.png","assets/jackSpade.png","assets/sevenSpades.png","assets/nineSpade.png","assets/eightSpade.png","assets/sixSpade.png","assets/fiveSpade.png","assets/fourSpade.png","assets/threeSpades1p.png","assets/twoSpades1p.png","assets/nineClub.png","assets/eightClub.png","assets/sixClub.png","assets/fiveClubs1p.png","assets/fourClub.png","assets/threeClub.png","assets/twoClub.png","assets/aceClub.png","assets/kingClub.png","assets/queenClub.png","assets/jackClubs.png","assets/sevenClub.png","assets/tenClubs.png","assets/aceDiamonds.png","assets/kingDiamond.png","assets/queenDiamonds.png","assets/jackDiamonds.png","assets/tenDiamonds.png","assets/nineDiamonds.png","assets/eightDiamonds.png","assets/sevenDiamonds.png","assets/sixDiamonds.png","assets/fiveDiamonds.png","assets/fourDiamonds.png","assets/threeDiamond.png","assets/twoDiamonds.png","component/cardDeck.js","component/Nav.js","component/CardArea.js","component/PrimaryButton.js","component/PlayArea.js","component/PlayGame.js","component/Start.js","component/Footer.js","component/StartGame.js","component/Results.js","component/EndGame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","cards","pic","require","value","played","Nav","props","react_default","a","createElement","Container","Row","className","Col","bet","money","Card","Image","src","cardValue","rounded","fluid","CardArea","concat","bgColor","xs","tableTitle","total","cardsGiven","map","deck","id","key","PrimaryButton","Button","variant","size","onClick","action","title","ButtonChoice","text","PlayArea","span","sm","offset","dealerCards","dealerTotal","playerCards","playerTotal","hit","stand","doubleDown","PlayGame","Start","_useState","useState","_useState2","Object","slicedToArray","pulseAnimation","setPulse","useEffect","setTimeout","addToBet","md","lg","xl","react_router_dom","to","start","Footer","winners","setWinners","displayWinners","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","data","winnerList","topWinners","wrap","_context","prev","next","fetch","sent","json","sort","b","fields","funds","slice","stop","apply","this","arguments","player","Name","StartGame","pulse","clickToPulse","Results","_useState3","_useState4","showSaveButton","setShowSaveButton","_useState5","_useState6","playerName","setPlayerName","gameResults","Modal","show","onHide","Header","closeButton","Title","Body","type","onChange","e","target","axios","post","bank","console","log","EndGame","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","dealCards","dealACard","state","dealerStack","setState","dealerDeckTotal","getCardPointsTotal","playerStack","playerDeckTotal","hand","push","randomCard","Math","floor","random","length","stackOfCards","cardNumber","foundAces","i","j","increaseBet","currentBet","previousState","startGame","results","endGame","winLose","dealerHand","pop","currentTotal","playerHit","playerStand","playerDoubleDown","_this2","react_router","exact","path","render","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mNAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC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","file":"static/js/main.f87e49f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.481118ba.png\";","module.exports = __webpack_public_path__ + \"static/media/aceHeart1p.dd6518f5.png\";","module.exports = __webpack_public_path__ + \"static/media/twoHeart.e62b3c28.png\";","module.exports = __webpack_public_path__ + \"static/media/threeHeart.89c1a37e.png\";","module.exports = __webpack_public_path__ + \"static/media/fourHeart.6d209adf.png\";","module.exports = __webpack_public_path__ + \"static/media/fiveHeart.bd31b082.png\";","module.exports = __webpack_public_path__ + \"static/media/sixHeart.38337160.png\";","module.exports = __webpack_public_path__ + \"static/media/sevenHeart.ab4eec77.png\";","module.exports = __webpack_public_path__ + \"static/media/eightHeart.1de482bc.png\";","module.exports = __webpack_public_path__ + \"static/media/nineHeart.4d4ab9f1.png\";","module.exports = __webpack_public_path__ + \"static/media/jackHeart.02f280f3.png\";","module.exports = __webpack_public_path__ + \"static/media/kingHeart.0c076242.png\";","module.exports = __webpack_public_path__ + \"static/media/queenHeart.4f8c8eda.png\";","module.exports = __webpack_public_path__ + \"static/media/aceSpade.873068ef.png\";","module.exports = __webpack_public_path__ + \"static/media/kingSpades.5c58acb8.png\";","module.exports = __webpack_public_path__ + \"static/media/queenSpade.dcbda38b.png\";","module.exports = __webpack_public_path__ + \"static/media/tenSpade.5689902b.png\";","module.exports = __webpack_public_path__ + \"static/media/jackSpade.adc36d3b.png\";","module.exports = __webpack_public_path__ + \"static/media/sevenSpades.d6bdbb47.png\";","module.exports = __webpack_public_path__ + \"static/media/nineSpade.085b70f8.png\";","module.exports = __webpack_public_path__ + \"static/media/eightSpade.f9e4cba5.png\";","module.exports = __webpack_public_path__ + \"static/media/sixSpade.5e14183a.png\";","module.exports = __webpack_public_path__ + \"static/media/fiveSpade.ee91a770.png\";","module.exports = __webpack_public_path__ + \"static/media/fourSpade.b89d58b0.png\";","module.exports = __webpack_public_path__ + \"static/media/threeSpades1p.7fa8fcce.png\";","module.exports = __webpack_public_path__ + \"static/media/twoSpades1p.ea98a689.png\";","module.exports = __webpack_public_path__ + \"static/media/nineClub.a259396f.png\";","module.exports = __webpack_public_path__ + \"static/media/eightClub.18d69b60.png\";","module.exports = __webpack_public_path__ + \"static/media/sixClub.fd05ef69.png\";","module.exports = __webpack_public_path__ + \"static/media/fiveClubs1p.6881ec63.png\";","module.exports = __webpack_public_path__ + \"static/media/fourClub.3bdfe325.png\";","module.exports = __webpack_public_path__ + \"static/media/threeClub.06062fd2.png\";","module.exports = __webpack_public_path__ + \"static/media/twoClub.b505368c.png\";","module.exports = __webpack_public_path__ + \"static/media/aceClub.2c5ef55a.png\";","module.exports = __webpack_public_path__ + \"static/media/kingClub.b0fbeda9.png\";","module.exports = __webpack_public_path__ + \"static/media/queenClub.bb09b2ae.png\";","module.exports = __webpack_public_path__ + \"static/media/jackClubs.a4bfeb7b.png\";","module.exports = __webpack_public_path__ + \"static/media/sevenClub.36528312.png\";","module.exports = __webpack_public_path__ + \"static/media/tenClubs.d75926d8.png\";","module.exports = __webpack_public_path__ + \"static/media/aceDiamonds.acc83084.png\";","module.exports = __webpack_public_path__ + \"static/media/kingDiamond.b1157921.png\";","module.exports = __webpack_public_path__ + \"static/media/queenDiamonds.e72688ab.png\";","module.exports = __webpack_public_path__ + \"static/media/jackDiamonds.c5592605.png\";","module.exports = __webpack_public_path__ + \"static/media/tenDiamonds.c667152b.png\";","module.exports = __webpack_public_path__ + \"static/media/nineDiamonds.a92373ce.png\";","module.exports = __webpack_public_path__ + \"static/media/eightDiamonds.78e31f0f.png\";","module.exports = __webpack_public_path__ + \"static/media/sevenDiamonds.6bf5216f.png\";","module.exports = __webpack_public_path__ + \"static/media/sixDiamonds.55a6dddb.png\";","module.exports = __webpack_public_path__ + \"static/media/fiveDiamonds.44eecc2e.png\";","module.exports = __webpack_public_path__ + \"static/media/fourDiamonds.e55f241f.png\";","module.exports = __webpack_public_path__ + \"static/media/threeDiamond.b776b982.png\";","module.exports = __webpack_public_path__ + \"static/media/twoDiamonds.3e69e9ff.png\";","//import aceHeart from '../assets/aceHeart1p.png';\r\nexport const cards = [\r\n  { pic: require(\"../assets/cover.png\"), value: 0, played: false },\r\n  { pic: require(\"../assets/aceHeart1p.png\"), value: 11, played: false },\r\n  { pic: require(\"../assets/twoHeart.png\"), value: 2, played: false },\r\n  { pic: require(\"../assets/threeHeart.png\"), value: 3, played: false },\r\n  { pic: require(\"../assets/fourHeart.png\"), value: 4, played: false },\r\n  { pic: require(\"../assets/fiveHeart.png\"), value: 5, played: false },\r\n  { pic: require(\"../assets/sixHeart.png\"), value: 6, played: false },\r\n  { pic: require(\"../assets/sevenHeart.png\"), value: 7, played: false },\r\n  { pic: require(\"../assets/eightHeart.png\"), value: 8, played: false },\r\n  { pic: require(\"../assets/nineHeart.png\"), value: 9, played: false },\r\n  { pic: require(\"../assets/jackHeart.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/kingHeart.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/queenHeart.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/aceSpade.png\"), value: 11, played: false },\r\n  { pic: require(\"../assets/kingSpades.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/queenSpade.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/tenSpade.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/jackSpade.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/sevenSpades.png\"), value: 7, played: false },\r\n  { pic: require(\"../assets/nineSpade.png\"), value: 9, played: false },\r\n  { pic: require(\"../assets/eightSpade.png\"), value: 8, played: false },\r\n  { pic: require(\"../assets/sixSpade.png\"), value: 6, played: false },\r\n  { pic: require(\"../assets/fiveSpade.png\"), value: 5, played: false },\r\n  { pic: require(\"../assets/fourSpade.png\"), value: 4, played: false },\r\n  { pic: require(\"../assets/threeSpades1p.png\"), value: 3, played: false },\r\n  { pic: require(\"../assets/twoSpades1p.png\"), value: 2, played: false },\r\n  { pic: require(\"../assets/nineClub.png\"), value: 9, played: false },\r\n  { pic: require(\"../assets/eightClub.png\"), value: 8, played: false },\r\n  { pic: require(\"../assets/sixClub.png\"), value: 6, played: false },\r\n  { pic: require(\"../assets/fiveClubs1p.png\"), value: 5, played: false },\r\n  { pic: require(\"../assets/fourClub.png\"), value: 4, played: false },\r\n  { pic: require(\"../assets/threeClub.png\"), value: 3, played: false },\r\n  { pic: require(\"../assets/twoClub.png\"), value: 2, played: false },\r\n  { pic: require(\"../assets/aceClub.png\"), value: 11, played: false },\r\n  { pic: require(\"../assets/kingClub.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/queenClub.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/jackClubs.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/sevenClub.png\"), value: 7, played: false },\r\n  { pic: require(\"../assets/tenClubs.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/aceDiamonds.png\"), value: 11, played: false },\r\n  { pic: require(\"../assets/kingDiamond.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/queenDiamonds.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/jackDiamonds.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/tenDiamonds.png\"), value: 10, played: false },\r\n  { pic: require(\"../assets/nineDiamonds.png\"), value: 9, played: false },\r\n  { pic: require(\"../assets/eightDiamonds.png\"), value: 8, played: false },\r\n  { pic: require(\"../assets/sevenDiamonds.png\"), value: 7, played: false },\r\n  { pic: require(\"../assets/sixDiamonds.png\"), value: 6, played: false },\r\n  { pic: require(\"../assets/fiveDiamonds.png\"), value: 5, played: false },\r\n  { pic: require(\"../assets/fourDiamonds.png\"), value: 4, played: false },\r\n  { pic: require(\"../assets/threeDiamond.png\"), value: 3, played: false },\r\n  { pic: require(\"../assets/twoDiamonds.png\"), value: 2, played: false }\r\n];\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\n\r\nexport default function Nav(props) {\r\n  return (\r\n    <Container>\r\n      <Row className=\"navBackground\">\r\n        <Col className=\"center primaryColor\">Bet ${props.bet}</Col>\r\n        <Col className=\"center primaryColor\">Funds ${props.money}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <Container className=\"cardStyle playArea\">\r\n      <Row>\r\n        <Col>\r\n          <Image src={props.cardValue} rounded fluid />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default function CardArea(props) {\r\n  return (\r\n    <Container className={`playArea ${props.bgColor}`}>\r\n      <Row>\r\n        <Col className=\"center\" xs={10}>\r\n          <h5>{props.tableTitle}</h5>\r\n        </Col>\r\n        <Col className=\"center\" xs={2}>\r\n          <h5>{props.total}</h5>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {props.cardsGiven.map(function(deck, id) {\r\n          return <Card key={id} cardValue={deck.pic} />;\r\n        })}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\n\r\nexport default function PrimaryButton(props) {\r\n  return (\r\n    <Container>\r\n      <Button\r\n        variant=\"warning\"\r\n        className={`buttonTextStyle ${props.size}`}\r\n        onClick={() => {\r\n          props.action();\r\n        }}\r\n      >\r\n        {props.title}\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\nimport CardArea from \"./CardArea\";\r\nimport PrimaryButton from \"./PrimaryButton\";\r\n\r\nfunction ButtonChoice(props) {\r\n  return (\r\n    <Row>\r\n      <Col xs={4}>\r\n        <PrimaryButton\r\n          size=\"smallButtonSize\"\r\n          title={props.title}\r\n          action={props.action}\r\n        />\r\n      </Col>\r\n      <Col xs={8}>\r\n        <p className=\"instructionText\">{props.text}</p>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default function PlayArea(props) {\r\n  return (\r\n    <Container className=\"appBackgroundColor\">\r\n      <Row>\r\n        <Col \r\n          xs={{span:12}}\r\n          sm={{span:8, offset:2}}\r\n        >\r\n          <CardArea\r\n            bgColor=\"dealerAreaColor\"\r\n            cardsGiven={props.dealerCards}\r\n            total={props.dealerTotal}\r\n            tableTitle=\"Dealer\"\r\n          />\r\n          <CardArea\r\n            bgColor=\"playerAreaColor\"\r\n            cardsGiven={props.playerCards}\r\n            total={props.playerTotal}\r\n            tableTitle=\"Player\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col\r\n          xs={{span:12}}\r\n          sm={{span:8, offset:2}}        \r\n        >\r\n          {props.playerTotal < 17 && (\r\n            <ButtonChoice\r\n              title=\"Hit\"\r\n              action={props.hit}\r\n              text={\"Get another card. If your new total is over 17, you lose!\"}\r\n            />\r\n          )}\r\n\r\n          <ButtonChoice\r\n            title=\"Stand\"\r\n            action={props.stand}\r\n            text={\"Click to end your turn. The dealer starts drawing cards!\"}\r\n          />\r\n\r\n          {props.playerTotal < 17 && (\r\n            <ButtonChoice\r\n              title={\"Double Down\"}\r\n              action={props.doubleDown}\r\n              text={\"Double your bet, get one card, and the dealer turn starts!\"}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\nimport Nav from \"./Nav\";\r\nimport PlayArea from \"./PlayArea\";\r\n\r\nexport default function PlayGame(props) {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Nav money={props.money} bet={props.bet} />\r\n          <PlayArea\r\n            hit={props.hit}\r\n            stand={props.stand}\r\n            doubleDown={props.doubleDown}\r\n            dealerCards={props.dealerCards}\r\n            playerCards={props.playerCards}\r\n            playerTotal={props.playerTotal}\r\n            dealerTotal={props.dealerTotal}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../App.css\";\r\nimport PrimaryButton from \"./PrimaryButton\";\r\n\r\nexport default function Start(props) {\r\n  const [pulseAnimation, setPulse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setPulse(\"\")\r\n    }, 1000);\r\n  });\r\n\r\n  return (\r\n    <Container className=\"appBackgroundColor primaryColor center whiteSpaceUnderNav\">\r\n      <Row className=\"whitespaceBetweenNavStartTite\">\r\n        <Col>\r\n          <h3>Are you ready to play</h3>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <h1>Black Jack</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col\r\n          className={`redCheque ${pulseAnimation}`}\r\n          onClick={() => {\r\n            props.addToBet();\r\n            setPulse(\"pulseWhenClicked\");\r\n          }}\r\n          xs={{ span: 9, offset: 1 }}\r\n          sm={{ span: 8, offset: 2 }}\r\n          md={{ span: 6, offset: 3 }}\r\n          lg={{ span: 6, offset: 3 }}\r\n          xl={{ span: 6, offset: 3 }}\r\n        >\r\n          ${props.bet}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          Click the chip to increase your bet, in increments of $5, up to your\r\n          bank amount of ${props.money}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Link to=\"/play\">\r\n            <PrimaryButton\r\n              size=\"largeButtonSize\"\r\n              title=\"Let's Play\"\r\n              action={props.start}\r\n            />\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\n\r\nexport default function Footer(props) {\r\n  const [winners, setWinners] = useState([]);\r\n\r\n  useEffect(() => { displayWinners(); }, []);\r\n\r\n  // Function to make API call to get list of names and funds, then sort it, and save the top three\r\n  const displayWinners = async () => {\r\n    const response = await fetch(`https://smiley-blackjack-game.netlify.app/.netlify/functions/getNames`);// API call to get the data from airtable.com\r\n\tconst data = await response.json();// Extracts the JSON from the response.body and converts JSON string into a JavaScript object\r\n    let winnerList = data.data.winners\r\n    winnerList.sort(function(a, b){return b.fields.funds - a.fields.funds}); // sort data by funds from high to lowest\r\n    const topWinners = winnerList.slice(0,3);// only get the top 3\r\n    setWinners(topWinners);// store in component state\r\n  }  \r\n\r\n  return (\r\n    <Container fluid className=\"footer-background\">\r\n      <Row>\r\n        <Col className=\"center primaryColor\">HIGH SCORES</Col>\r\n      </Row>\r\n      {\r\n          winners.map((player, id) => {\r\n            return(\r\n              <Row key ={id}>\r\n                <Col className=\"center primaryColor\">{player.fields.Name}</Col>\r\n                <Col className=\"center primaryColor\">${player.fields.funds} </Col>\r\n              </Row>\r\n            );\r\n          })\r\n      }\r\n    </Container>\r\n  );\r\n}","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\nimport Nav from \"./Nav\";\r\nimport Start from \"./Start\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function StartGame(props) {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Nav money={props.money} bet={props.bet} />\r\n          <Start\r\n            start={props.start}\r\n            money={props.money}\r\n            pulse={props.pulse}\r\n            clickToPulse={props.clickToPulse}\r\n            bet={props.bet}\r\n            addToBet={props.addToBet}\r\n          />\r\n          <Footer />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Col, Modal } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport \"../App.css\";\r\nimport PrimaryButton from \"./PrimaryButton\";\r\n\r\nexport default function Results(props) {\r\n  \r\nconst [pulseAnimation, setPulse] = useState(\"\");\r\nconst [showSaveButton, setShowSaveButton] = useState(false);\r\nconst [playerName, setPlayerName] = useState(\"\");\r\n\r\nuseEffect(() => {\r\n  setTimeout(() => {\r\n    setPulse(\"\")\r\n  }, 1000);\r\n});\r\n\r\nconst saveUserToScoreboard = () => {    \r\n  const url = \"https://smiley-blackjack-game.netlify.app/.netlify/functions/addname\"\r\n  axios.post(url,{\"playerName\":playerName, \"bank\":props.money});  \r\nconsole.log(`${playerName} has this much money ${props.money}`)\r\n  setShowSaveButton(false)\r\n}\r\n\r\n  return (\r\n    <Container className=\"resultsBackgroundColor  primaryColor center whiteSpaceUnderNav\">\r\n      {props.gameResults === \"win\" && (\r\n        <Row className=\"whiteSpaceBetweenElements\">\r\n          <Col>\r\n            <h1>YOU WON!!!</h1>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {props.gameResults === \"lose\" && (\r\n        <Row className=\"whiteSpaceBetweenElements\">\r\n          <Col>\r\n            <h1>You LOSE!!!</h1>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {props.gameResults === \"push\" && (\r\n        <Row className=\"whiteSpaceBetweenElements\">\r\n          <Col>\r\n            <h1>It was a TIE</h1>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row className=\"whiteSpaceBetweenElements\">\r\n        <Col className=\"pull-right\">\r\n          <h5>Dealer</h5>\r\n        </Col>\r\n        <Col className=\"pull-left\">\r\n          <h5>{props.dealerTotal}</h5>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"whiteSpaceBetweenElements\">\r\n        <Col className=\"pull-right\">\r\n          <h5>Player</h5>\r\n        </Col>\r\n        <Col className=\"pull-left\">\r\n          <h5>{props.playerTotal}</h5>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"whiteSpaceBetweenElements\">\r\n        <Col\r\n          className={`smallRedCheque primaryColor ${pulseAnimation}`}\r\n          onClick={() => {\r\n            props.addToBet();\r\n            setPulse(\"pulseWhenClicked\");\r\n          }}\r\n          xs={{ span: 9, offset: 1 }}\r\n          sm={{ span: 8, offset: 2 }}\r\n          md={{ span: 6, offset: 3 }}\r\n          lg={{ span: 6, offset: 3 }}\r\n          xl={{ span: 6, offset: 3 }}\r\n        >\r\n          ${props.bet}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"center whiteSpaceBetweenElements\">\r\n        <Col xs={12} className=\"instructionText\">\r\n          Click the chip to increase your bet, in increments of $5, up to your\r\n          funds limit\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"whiteSpaceBetweenElements\">\r\n        <Col>\r\n          <Link to=\"/play\">\r\n            <PrimaryButton\r\n              size=\"largeButtonSize\"\r\n              title=\"Let's Play\"\r\n              action={props.start}\r\n            />\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"whiteSpaceBetweenElements\">\r\n        <Col>\r\n            <PrimaryButton\r\n              size=\"largeButtonSize\"\r\n              title=\"Save to Scoreboard\"\r\n              action={() => setShowSaveButton(true)}\r\n            />\r\n        </Col>\r\n      </Row>\r\n      <Modal show={showSaveButton} onHide={() => setShowSaveButton(false)} className=\"scoreboardBackground\" >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add your name to the ScoreBoard</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"text\" value={playerName}  onChange={e => setPlayerName(e.target.value)} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <PrimaryButton\r\n              size=\"largeButtonSize\"\r\n              title=\"Save to Scoreboard\"\r\n              action={() => saveUserToScoreboard()}\r\n            />\r\n          </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\nimport Nav from \"./Nav\";\r\nimport Results from \"./Results\";\r\n\r\nexport default function EndGame(props) {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Nav money={props.money} bet={props.bet} />\r\n          <Results\r\n            playerTotal={props.playerTotal}\r\n            gameResults={props.gameResults}\r\n            start={props.start}\r\n            addToBet={props.addToBet}\r\n            bet={props.bet}\r\n            pulse={props.pulse}\r\n            clickToPulse={props.clickToPulse}\r\n            dealerTotal={props.dealerTotal}\r\n            money={props.money}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport \"./App.css\";\r\nimport { cards } from \"./component/cardDeck\";\r\nimport PlayGame from \"./component/PlayGame\"; //component to play the game\r\nimport StartGame from \"./component/StartGame\"; //component to start the game\r\nimport EndGame from \"./component/EndGame\"; //component to show the results of the game\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      funds: 100, //the player betting funds\r\n      results: false, //when true, the results of the game is shown\r\n      winLose: \"lose\", //state sent to the results component to show win, lose, or tie\r\n      currentBet: 5, //current player bet amount\r\n      dealerStack: [], //dealer hand, stack of cards\r\n      playerStack: [], //player hand, stack of cards\r\n      dealerDeckTotal: 0, //dealer hand total\r\n      playerDeckTotal: 0, //player hand total\r\n    };\r\n  }\r\n\r\n  //At the beginning of the game the player is dealt 2 face up cards and the dealer one face up/one face down\r\n  //All cards are dealt one at a time\r\n  dealCards = () => {\r\n    this.dealACard(this.state.dealerStack); //deal the dealer one card\r\n\r\n    //update the dealer's hand total points\r\n    this.setState({\r\n      dealerDeckTotal: this.getCardPointsTotal(this.state.dealerStack)\r\n    });\r\n\r\n    //deal the player a card and update the points\r\n    setTimeout(() => {\r\n      this.dealACard(this.state.playerStack);\r\n      this.setState({\r\n        playerDeckTotal: this.getCardPointsTotal(this.state.playerStack)\r\n      });\r\n    }, 1000);\r\n\r\n    //deal the player a card and update the points\r\n    setTimeout(() => {\r\n      this.dealACard(this.state.playerStack);\r\n      this.setState({\r\n        playerDeckTotal: this.getCardPointsTotal(this.state.playerStack)\r\n      });\r\n    }, 2000);\r\n\r\n    //deal the dealer a down card\r\n    setTimeout(() => {\r\n      const hand = this.state.dealerStack; //array to create dealer's hand of random cards\r\n      hand.push(cards[0]);\r\n      this.setState({ dealerStack: hand });\r\n    }, 3000);\r\n  };\r\n\r\n  //standard method for getting a random index of the cards array\r\n  randomCard = () => {\r\n    return Math.floor(Math.random() * (cards.length - 1)) + 1;\r\n  };\r\n\r\n  //method use to add one card to either the player or dealer hand\r\n  dealACard = stackOfCards => {\r\n    let hand = stackOfCards; //get the current array of card objects\r\n    let cardNumber = this.randomCard(); //get a random card index number\r\n\r\n    //check if card have been played already\r\n    if (cards[cardNumber].played) {\r\n      cardNumber = this.randomCard();\r\n      cards[cardNumber].played = true;\r\n    } else {\r\n      cards[cardNumber].played = true;\r\n    }\r\n\r\n    hand.push(cards[cardNumber]); //add the card object from the cards array based on the index number\r\n\r\n    this.setState({ stackOfCards: hand }); //update the current array of cards objects\r\n  };\r\n\r\n  //Get a sum of all cards worth and update the state\r\n  getCardPointsTotal = deck => {\r\n    let total = 0;\r\n    let foundAces = 0;\r\n\r\n    //loop through each card adding the value to \"total\". Keep track of all values that is 11 to add up later\r\n    for (var i = 0; i < deck.length; i++) {\r\n      if (deck[i].value === 11) {\r\n        //if the value is a 11, track it but don't add\r\n        foundAces++;\r\n      } else {\r\n        total += deck[i].value; //add the value to total\r\n      }\r\n    }\r\n\r\n    if (foundAces > 0) {\r\n      //if the number of Aces is more then 0,\r\n      for (var j = 0; j < foundAces; j++) {\r\n        //loop through the number of Aces\r\n\r\n        if (total + 11 > 21) {\r\n          //if the total of all cards including the Ace is over 21, add the Ace as a 2\r\n          total += 2;\r\n        } else {\r\n          total += 11; //if the total of all cards including the Ace is under 21, add the Ace as a 11\r\n        }\r\n      }\r\n    }\r\n\r\n    return total;\r\n  };\r\n\r\n  //method to increase the bet amount up to the fund limit. If the bet amount is greater then fund\r\n  //then the bet amount start over at 5.\r\n  increaseBet = () => {\r\n    if (this.state.currentBet >= this.state.funds) {\r\n      this.setState({ currentBet: 5 });\r\n    } else {\r\n      this.setState(previousState => ({\r\n        currentBet: previousState.currentBet + 5\r\n      }));\r\n    }\r\n  };\r\n\r\n  //called from the start button on the Start Game component to start the game\r\n  startGame = () => {\r\n    this.dealCards();\r\n    this.setState({results:false});\r\n  };\r\n\r\n  //Show the Results component\r\n  endGame = () => {\r\n    let gameResults = \"lose\";\r\n\r\n    //if the player has less then 21 but more then the dealer or the dealer has bust but the player has not then the player win\r\n    if (\r\n      (this.state.playerDeckTotal <= 21 &&\r\n        this.state.playerDeckTotal > this.state.dealerDeckTotal) ||\r\n      (this.state.dealerDeckTotal > 21 && this.state.playerDeckTotal <= 21)\r\n    ) {\r\n      gameResults = \"win\"; //return that the player won\r\n\r\n      //player win the money bet\r\n      this.setState(previousState => ({\r\n        funds: previousState.funds + this.state.currentBet\r\n      }));\r\n    } else if (this.state.playerDeckTotal === this.state.dealerDeckTotal) {\r\n      gameResults = \"push\"; //return that the game was tie\r\n    } else {\r\n      gameResults = \"lose\"; //return that the player lost\r\n\r\n      //player lose the money bet\r\n      this.setState(previousState => ({\r\n        funds: previousState.funds - this.state.currentBet\r\n      }));\r\n    }\r\n    //switch to the EndGame component with results of the game and reset player/dealer hands\r\n    this.setState({\r\n      results: true,\r\n      winLose: gameResults,\r\n      dealerStack: [],\r\n      playerStack: []\r\n    });\r\n  };\r\n\r\n  //deals cards to the dealer till get a soft 17 or one card over\r\n  dealerHand = () => {\r\n    let hand = this.state.dealerStack; //get the current dealer's hand\r\n    hand.pop(); //uncover the card by removing the \"cover\" card\r\n\r\n    let currentTotal = this.state.dealerDeckTotal; //get current sum of dealer's hand\r\n\r\n    //Add card to the dealer hand as long as the sum of the dealer's and is less then or equal to 17\r\n    do {\r\n      this.dealACard(this.state.dealerStack); //deal the dealer one card\r\n\r\n      //update the dealer's hand total points\r\n      this.setState({\r\n        dealerDeckTotal: this.getCardPointsTotal(this.state.dealerStack)\r\n      });\r\n\r\n      //update currentTotal\r\n      currentTotal = this.getCardPointsTotal(this.state.dealerStack);\r\n    } while (currentTotal < 17);\r\n\r\n    setTimeout(() => {\r\n      this.endGame();\r\n    }, 2000);\r\n  };\r\n\r\n  //Add a card to the player deck stack if the hand's sum is under or equal to 17\r\n  playerHit = () => {\r\n    //if hand's sum is under or equal to 17 add one card\r\n    if (this.state.playerDeckTotal <= 17) {\r\n      this.dealACard(this.state.playerStack); //deal the player one card\r\n    }\r\n\r\n    //update the player's hand total points\r\n    this.setState({\r\n      playerDeckTotal: this.getCardPointsTotal(this.state.playerStack)\r\n    });\r\n\r\n    //Bug Fixed: need a up to date total\r\n    const currentTotal = this.getCardPointsTotal(this.state.playerStack);\r\n\r\n    //if hand's sum is greater then 17 then its the dealer turn\r\n    if (currentTotal > 17) {\r\n      this.dealerHand(); //get cards for the dealer\r\n    }\r\n  };\r\n\r\n  //The player use their current points and allow the dealer to take a turn\r\n  playerStand = () => {\r\n    this.dealerHand();\r\n  };\r\n\r\n  //The player double their bet (or go all in), receive one card, and end their turn.\r\n  playerDoubleDown = () => {\r\n    this.dealACard(this.state.playerStack); //deal the player one card\r\n\r\n    //update the player's hand total points\r\n    this.setState({\r\n      playerDeckTotal: this.getCardPointsTotal(this.state.playerStack)\r\n    });\r\n\r\n    //double the bet unless that amount is more then the player funds. If so, bet the entire funds amount\r\n    if (this.state.currentBet * 2 > this.state.funds) {\r\n      this.setState({ currentBet: this.state.funds });\r\n    } else {\r\n      this.setState(previousState => ({\r\n        currentBet: previousState.currentBet * 2\r\n      }));\r\n    }\r\n\r\n    this.dealerHand(); //Deal the dealer a hand\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Container>\r\n        {this.state.results &&\r\n          <Redirect to=\"/end\" />\r\n        }        \r\n        <Route exact path=\"/\" render={props => <StartGame\r\n            money={this.state.funds}\r\n            start={this.startGame}\r\n            addToBet={this.increaseBet}\r\n            bet={this.state.currentBet}\r\n          />}  />\r\n        <Route path=\"/play\" render={props => <PlayGame\r\n            money={this.state.funds}\r\n            hit={this.playerHit}\r\n            stand={this.playerStand}\r\n            doubleDown={this.playerDoubleDown}\r\n            bet={this.state.currentBet}\r\n            dealerTotal={this.state.dealerDeckTotal}\r\n            playerTotal={this.state.playerDeckTotal}\r\n            dealerCards={this.state.dealerStack}\r\n            playerCards={this.state.playerStack}\r\n          />} />\r\n        <Route path=\"/end\" render={props => <EndGame\r\n            gameResults={this.state.winLose}\r\n            money={this.state.funds}\r\n            start={this.startGame}\r\n            bet={this.state.currentBet}\r\n            addToBet={this.increaseBet}\r\n            dealerTotal={this.state.dealerDeckTotal}\r\n            playerTotal={this.state.playerDeckTotal}\r\n          />} />\r\n        </Container>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}