{"version":3,"sources":["assets/cover.png","assets/aceHeart1p.png","assets/jackHeart.png","assets/kingHeart.png","assets/nineHeart.png","assets/queenHeart.png","assets/aceSpade.png","assets/kingSpades.png","assets/sevenSpades.png","assets/threeSpades1p.png","assets/twoSpades1p.png","assets/eightClub.png","assets/fiveClubs1p.png","assets/kingClub.png","assets/queenClub.png","assets/sevenClub.png","assets/tenClubs.png","assets/kingDiamond.png","assets/fiveDiamonds.png","component/cardDeck.js","component/Nav.js","component/CardArea.js","component/PrimaryButton.js","component/PlayArea.js","component/PlayGame.js","component/Start.js","component/StartGame.js","component/Results.js","component/EndGame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","cards","pic","require","value","played","Nav","props","react_default","a","createElement","Container","Row","className","Col","bet","money","Card","Image","src","cardValue","rounded","fluid","CardArea","concat","bgColor","xs","tableTitle","total","cardsGiven","map","deck","id","key","PrimaryButton","Button","variant","size","onClick","action","title","PlayArea","dealerCards","dealerTotal","playerCards","playerTotal","hit","stand","doubleDown","PlayGame","span","sm","offset","md","lg","xl","Start","addToBet","start","StartGame","Results","gameResults","EndGame","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dealCards","playerCard1","randomCard","playerCard2","push","dealerCard1","setState","playerStack","dealerStack","playerDeckTotal","getCardPointsTotal","dealerDeckTotal","Math","floor","random","length","dealACard","stackOfCards","hand","cardNumber","foundAces","i","j","increaseBet","state","currentBet","funds","previousState","startGame","startPlay","results","endGame","winLose","dealerHand","pop","currentTotal","setTimeout","playerHit","playerStand","playerDoubleDown","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oKAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iLCC3BC,QAAQ,CACjB,CAACC,IAAMC,EAAQ,IAAwBC,MAAQ,EAAGC,QAAS,GAE3D,CAACH,IAAMC,EAAQ,IAA6BC,MAAQ,GAAIC,QAAS,GACjE,CAACH,IAAMC,EAAQ,IAA4BC,MAAQ,GAAIC,QAAS,GAChE,CAACH,IAAMC,EAAQ,IAA4BC,MAAQ,GAAIC,QAAS,GAChE,CAACH,IAAMC,EAAQ,IAA4BC,MAAQ,EAAGC,QAAS,GAC/D,CAACH,IAAMC,EAAQ,IAA6BC,MAAQ,GAAIC,QAAS,GAEjE,CAACH,IAAMC,EAAQ,IAA2BC,MAAQ,GAAIC,QAAS,GAC/D,CAACH,IAAMC,EAAQ,IAA6BC,MAAQ,GAAIC,QAAS,GACjE,CAACH,IAAMC,EAAQ,IAA8BC,MAAQ,EAAGC,QAAS,GACjE,CAACH,IAAMC,EAAQ,IAAgCC,MAAQ,EAAGC,QAAS,GACnE,CAACH,IAAMC,EAAQ,IAA8BC,MAAQ,EAAGC,QAAS,GAEjE,CAACH,IAAMC,EAAQ,IAA4BC,MAAQ,EAAGC,QAAS,GAC/D,CAACH,IAAMC,EAAQ,IAA8BC,MAAQ,EAAGC,QAAS,GACjE,CAACH,IAAMC,EAAQ,IAA2BC,MAAQ,GAAIC,QAAS,GAC/D,CAACH,IAAMC,EAAQ,IAA4BC,MAAQ,GAAIC,QAAS,GAChE,CAACH,IAAMC,EAAQ,IAA4BC,MAAQ,EAAGC,QAAS,GAC/D,CAACH,IAAMC,EAAQ,IAA2BC,MAAQ,GAAIC,QAAS,GAE/D,CAACH,IAAMC,EAAQ,IAA8BC,MAAQ,GAAIC,QAAS,GAClE,CAACH,IAAMC,EAAQ,IAA+BC,MAAQ,EAAGC,QAAS,qBCnBvD,SAASC,EAAIC,GACxB,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,UAAU,iBACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,uBAAf,QACMN,EAAMQ,KAEZP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,uBAAf,UACYN,EAAMS,qBCRlC,SAASC,EAAKV,GACV,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,UAAU,sBACjBL,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAKN,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAOC,IAAKZ,EAAMa,UAAWC,SAAO,EAACC,OAAK,OAOhD,SAASC,EAAShB,GAE7B,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,UAAS,YAAAW,OAAcjB,EAAMkB,UACpCjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,SAASa,GAAI,IAAIlB,EAAAC,EAAAC,cAAA,UAAKH,EAAMoB,aAC3CnB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,SAASa,GAAI,GAAGlB,EAAAC,EAAAC,cAAA,UAAKH,EAAMqB,SAE9CpB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACKL,EAAMsB,WAAWC,IAAI,SAASC,EAAMC,GACjC,OAAOxB,EAAAC,EAAAC,cAACO,EAAD,CAAMgB,IAAKD,EAAIZ,UAAWW,EAAK7B,sBCrB3C,SAASgC,EAAc3B,GAClC,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAYC,QAAQ,UACRvB,UAAS,mBAAAW,OAAqBjB,EAAM8B,MACpCC,QAAS,WAAK/B,EAAMgC,WAC3BhC,EAAMiC,QCJR,SAASC,EAASlC,GAC7B,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,UAAU,sBACjBL,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACa,EAAD,CAAUE,QAAS,kBAAkBI,WAActB,EAAMmC,YAAad,MAAOrB,EAAMoC,YAAahB,WAAW,WAC3GnB,EAAAC,EAAAC,cAACa,EAAD,CAAUE,QAAU,kBAAkBI,WAAYtB,EAAMqC,YAAahB,MAAOrB,EAAMsC,YAAalB,WAAW,aAGjHpB,EAAMsC,YAAc,IACrBrC,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKY,GAAI,GAAGlB,EAAAC,EAAAC,cAACwB,EAAD,CAAeG,KAAK,kBAAkBG,MAAM,MAAMD,OAAQhC,EAAMuC,OAC5EtC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKY,GAAI,GAAGlB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBAAb,+DAIhBL,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKY,GAAI,GAAGlB,EAAAC,EAAAC,cAACwB,EAAD,CAAeG,KAAK,kBAAkBG,MAAM,QAAQD,OAAQhC,EAAMwC,SAC9EvC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKY,GAAI,GAAGlB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBAAb,8DAGfN,EAAMsC,YAAc,IACrBrC,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKY,GAAI,GAAGlB,EAAAC,EAAAC,cAACwB,EAAD,CAAeG,KAAK,kBAAkBG,MAAM,cAAcD,OAAQhC,EAAMyC,cACpFxC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKY,GAAI,GAAGlB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBAAb,iECxBb,SAASoC,EAAS1C,GAC7B,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMY,GAAI,CAACwB,KAAK,IACVC,GAAI,CAACD,KAAK,GAAIE,OAAO,GACrBC,GAAI,CAACH,KAAK,EAAGE,OAAO,GACpBE,GAAI,CAACJ,KAAK,EAAGE,OAAO,GACpBG,GAAI,CAACL,KAAK,EAAGE,OAAO,IACxB5C,EAAAC,EAAAC,cAACJ,EAAD,CAAKU,MAAOT,EAAMS,MAAOD,IAAKR,EAAMQ,MACpCP,EAAAC,EAAAC,cAAC+B,EAAD,CAAUK,IAAKvC,EAAMuC,IACXC,MAASxC,EAAMwC,MACfC,WAAYzC,EAAMyC,WAClBN,YAAanC,EAAMmC,YACnBE,YAAarC,EAAMqC,YACnBC,YAAatC,EAAMsC,YACnBF,YAAapC,EAAMoC,iBCjB1B,SAASa,EAAMjD,GAC1B,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,UAAU,6DACjBL,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAKJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAKN,EAAAC,EAAAC,cAAA,qCACVF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAKJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAKN,EAAAC,EAAAC,cAAA,0BACVF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQD,UAAU,YACVyB,QAAS,WAAO/B,EAAMkD,YACtB/B,GAAI,CAACwB,KAAK,EAAGE,OAAO,GACpBD,GAAI,CAACD,KAAK,EAAGE,OAAO,GACpBC,GAAI,CAACH,KAAK,EAAGE,OAAO,GACpBE,GAAI,CAACJ,KAAK,EAAGE,OAAO,GACpBG,GAAI,CAACL,KAAK,EAAGE,OAAO,IAN5B,IAQc7C,EAAMQ,MAGxBP,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAKJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,6FAA2FP,EAAMS,QACtGR,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAKJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAKN,EAAAC,EAAAC,cAACwB,EAAD,CAAeG,KAAK,kBAAkBG,MAAM,aAAaD,OAAQhC,EAAMmD,WCjB9E,SAASC,EAAUpD,GAC9B,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMY,GAAI,CAACwB,KAAK,IACVC,GAAI,CAACD,KAAK,GAAIE,OAAO,GACrBC,GAAI,CAACH,KAAK,EAAGE,OAAO,GACpBE,GAAI,CAACJ,KAAK,EAAGE,OAAO,GACpBG,GAAI,CAACL,KAAK,EAAGE,OAAO,IACxB5C,EAAAC,EAAAC,cAACJ,EAAD,CAAKU,MAAOT,EAAMS,MAAOD,IAAKR,EAAMQ,MACpCP,EAAAC,EAAAC,cAAC8C,EAAD,CAAOE,MAAOnD,EAAMmD,MAAO1C,MAAOT,EAAMS,MAAOD,IAAKR,EAAMQ,IAAK0C,SAAUlD,EAAMkD,cCX5E,SAASG,EAAQrD,GAC5B,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,UAAU,6DACM,QAAtBN,EAAMsD,aACHrD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,UAAU,6BAA4BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAKN,EAAAC,EAAAC,cAAA,0BAE7B,SAAtBH,EAAMsD,aACHrD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,UAAU,6BAA4BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAKN,EAAAC,EAAAC,cAAA,2BAE7B,SAAtBH,EAAMsD,aACHrD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,UAAU,6BAA4BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAKN,EAAAC,EAAAC,cAAA,4BAEpDF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,UAAU,6BACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,UAASL,EAAAC,EAAAC,cAAA,qBACxBF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,UAASL,EAAAC,EAAAC,cAAA,UAAKH,EAAMoC,eAEvCnC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,UAAU,6BACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,UAASL,EAAAC,EAAAC,cAAA,qBACxBF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKD,UAAU,UAASL,EAAAC,EAAAC,cAAA,UAAKH,EAAMsC,eAEvCrC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,UAAU,6BACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQD,UAAU,8BACVyB,QAAS,WAAO/B,EAAMkD,YACtB/B,GAAI,CAACwB,KAAK,EAAGE,OAAO,GACpBD,GAAI,CAACD,KAAK,EAAGE,OAAO,GACpBC,GAAI,CAACH,KAAK,EAAGE,OAAO,GACpBE,GAAI,CAACJ,KAAK,EAAGE,OAAO,GACpBG,GAAI,CAACL,KAAK,EAAGE,OAAO,IAN5B,IAQc7C,EAAMQ,MAGxBP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,UAAU,oCACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKY,GAAI,GAAIb,UAAU,mBAAvB,qFAEJL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,UAAU,6BAA4BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAKN,EAAAC,EAAAC,cAACwB,EAAD,CAAeG,KAAK,kBAAkBG,MAAM,aAAaD,OAAQhC,EAAMmD,WClCpH,SAASI,EAAQvD,GAC5B,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMY,GAAI,CAACwB,KAAK,IACVC,GAAI,CAACD,KAAK,GAAIE,OAAO,GACrBC,GAAI,CAACH,KAAK,EAAGE,OAAO,GACpBE,GAAI,CAACJ,KAAK,EAAGE,OAAO,GACpBG,GAAI,CAACL,KAAK,EAAGE,OAAO,IACxB5C,EAAAC,EAAAC,cAACJ,EAAD,CAAKU,MAAOT,EAAMS,MAAOD,IAAKR,EAAMQ,MACpCP,EAAAC,EAAAC,cAACkD,EAAD,CAASf,YAAatC,EAAMsC,YACnBgB,YAAetD,EAAMsD,YACrBH,MAAOnD,EAAMmD,MACbD,SAAUlD,EAAMkD,SAChB1C,IAAKR,EAAMQ,IACX4B,YAAapC,EAAMoC,qBCmPzBoB,cA/Pb,SAAAA,EAAYxD,GAAM,IAAAyD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAChBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM5D,KAmBRgE,UAAY,WAEV,IAAI3B,EAAc,GACZ4B,EAAcR,EAAKS,aACrBC,EAAcV,EAAKS,aAGpBC,IAAgBF,IACjBE,EAAcV,EAAKS,cAIrB7B,EAAY+B,KAAK1E,EAAMuE,IACvB5B,EAAY+B,KAAK1E,EAAMyE,IAGvBzE,EAAMuE,GAAanE,QAAS,EAC5BJ,EAAMyE,GAAarE,QAAS,EAE5B,IAAIqC,EAAc,GACZkC,EAAcZ,EAAKS,aAEzB/B,EAAYiC,KAAK1E,EAAM2E,IACvBlC,EAAYiC,KAAK1E,EAAM,IAEvBA,EAAM2E,GAAavE,QAAS,EAC5BJ,EAAM,GAAGI,QAAS,EAElB2D,EAAKa,SAAS,CAAEC,YAAalC,EACbmC,YAAYrC,EACZsC,gBAAiBhB,EAAKiB,mBAAmBrC,GACzCsC,gBAAgBlB,EAAKiB,mBAAmBvC,MAnDxCsB,EAuDlBS,WAAa,WACX,OAAOU,KAAKC,MAAMD,KAAKE,UAAYpF,EAAMqF,OAAQ,IAAO,GAxDxCtB,EA4DlBuB,UAAY,SAACC,GACX,IAAIC,EAAOD,EACPE,EAAa1B,EAAKS,aAGnBxE,EAAMyF,GAAYrF,QACnBqF,EAAa1B,EAAKS,aAClBxE,EAAMyF,GAAYrF,QAAS,GAE3BJ,EAAMyF,GAAYrF,QAAS,EAG7BoF,EAAKd,KAAK1E,EAAMyF,IAEhB1B,EAAKa,SAAS,CAACW,aAAaC,KA1EZzB,EA+ElBiB,mBAAqB,SAAClD,GAMpB,IAJA,IAAIH,EAAQ,EACR+D,EAAY,EAGRC,EAAE,EAAEA,EAAE7D,EAAKuD,OAAOM,IACH,KAAlB7D,EAAK6D,GAAGxF,MACTuF,IAEA/D,GAASG,EAAK6D,GAAGxF,MAKrB,GAAGuF,EAAY,EACb,IAAI,IAAIE,EAAE,EAAEA,EAAEF,EAAUE,IAGpBjE,GADEA,EAAQ,GAAM,GACP,EAEA,GAMf,OAAOA,GA1GSoC,EA+GlB8B,YAAc,WACT9B,EAAK+B,MAAMC,YAAchC,EAAK+B,MAAME,MACrCjC,EAAKa,SAAS,CAACmB,WAAW,IAE1BhC,EAAKa,SAAS,SAAAqB,GAAa,MAAK,CAC9BF,WAAYE,EAAcF,WAAa,MApH3BhC,EA0HlBmC,UAAY,WACVnC,EAAKa,SAAS,CAACuB,WAAU,EAAMC,SAAQ,IACvCrC,EAAKO,aA5HWP,EAgIlBsC,QAAU,WACR,IAAIzC,EAAc,OAGdG,EAAK+B,MAAMf,iBAAmB,IAAMhB,EAAK+B,MAAMf,gBAAkBhB,EAAK+B,MAAMb,iBAAqBlB,EAAK+B,MAAMb,gBAAkB,IAAMlB,EAAK+B,MAAMf,iBAAmB,IACpKnB,EAAc,MAGdG,EAAKa,SAAS,SAAAqB,GAAa,MAAK,CAC9BD,MAAOC,EAAcD,MAAQjC,EAAK+B,MAAMC,eAEnChC,EAAK+B,MAAMf,kBAAoBhB,EAAK+B,MAAMb,gBACjDrB,EAAc,QAEdA,EAAc,OAGdG,EAAKa,SAAS,SAAAqB,GAAa,MAAK,CAC9BD,MAAOC,EAAcD,MAAQjC,EAAK+B,MAAMC,eAI5ChC,EAAKa,SAAS,CAACwB,SAAQ,EAAMD,WAAU,EAAOG,QAAQ1C,KAtJtCG,EA0JlBwC,WAAa,WACAxC,EAAK+B,MAAMhB,YACjB0B,MAEL,IAAIC,EAAe1C,EAAK+B,MAAMb,gBAG9B,GAEElB,EAAKuB,UAAUvB,EAAK+B,MAAMhB,aAG1Bf,EAAKa,SAAS,CAACK,gBAAiBlB,EAAKiB,mBAAmBjB,EAAK+B,MAAMhB,eAGnE2B,EAAe1C,EAAKiB,mBAAmBjB,EAAK+B,MAAMhB,mBAE7C2B,EAAe,IAEtBC,WAAW,WAAK3C,EAAKsC,WAAY,MA7KjBtC,EAiLlB4C,UAAY,WAGP5C,EAAK+B,MAAMf,iBAAmB,IAC/BhB,EAAKuB,UAAUvB,EAAK+B,MAAMjB,aAI5Bd,EAAKa,SAAS,CAACG,gBAAiBhB,EAAKiB,mBAAmBjB,EAAK+B,MAAMjB,eAG9Cd,EAAKiB,mBAAmBjB,EAAK+B,MAAMjB,aAGtC,IAChBd,EAAKwC,cAhMSxC,EAsMlB6C,YAAc,WACZ7C,EAAKwC,cAvMWxC,EA2MlB8C,iBAAmB,WAEjB9C,EAAKuB,UAAUvB,EAAK+B,MAAMjB,aAG1Bd,EAAKa,SAAS,CAACG,gBAAiBhB,EAAKiB,mBAAmBjB,EAAK+B,MAAMjB,eAGzC,EAAtBd,EAAK+B,MAAMC,WAAgBhC,EAAK+B,MAAME,MACtCjC,EAAKa,SAAS,CAACmB,WAAWhC,EAAK+B,MAAME,QAEvCjC,EAAKa,SAAS,SAAAqB,GAAa,MAAK,CAC9BF,WAAuC,EAA3BE,EAAcF,cAI9BhC,EAAKwC,cAzNLxC,EAAK+B,MAAM,CACTE,MAAM,IACNG,WAAW,EACXC,SAAS,EACTE,QAAS,OACTP,WAAY,EACZjB,YAAY,GACZD,YAAY,GACZI,gBAAgB,EAChBF,gBAAgB,GAXFhB,qHA+NhB,OACExD,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAC4B,IAAzBwD,KAAK4B,MAAMK,YAA6C,IAAtBjC,KAAK4B,MAAMM,SAC9C7F,EAAAC,EAAAC,cAACiD,EAAD,CAAY3C,MAAOmD,KAAK4B,MAAME,MAClBvC,MAAOS,KAAKgC,UACZ1C,SAAYU,KAAK2B,YACjB/E,IAAKoD,KAAK4B,MAAMC,cAEF,IAAzB7B,KAAK4B,MAAMK,YAA4C,IAAtBjC,KAAK4B,MAAMM,SAC3C7F,EAAAC,EAAAC,cAACuC,EAAD,CAAUjC,MAAOmD,KAAK4B,MAAME,MAClBnD,IAAKqB,KAAKyC,UACV7D,MAAOoB,KAAK0C,YACZ7D,WAAYmB,KAAK2C,iBACjB/F,IAAKoD,KAAK4B,MAAMC,WAChBrD,YAAewB,KAAK4B,MAAMb,gBAC1BrC,YAAesB,KAAK4B,MAAMf,gBAC1BtC,YAAayB,KAAK4B,MAAMhB,YACxBnC,YAAauB,KAAK4B,MAAMjB,eAEZ,IAAvBX,KAAK4B,MAAMM,SACV7F,EAAAC,EAAAC,cAACoD,EAAD,CAAUD,YAAeM,KAAK4B,MAAMQ,QAC1BvF,MAAOmD,KAAK4B,MAAME,MAClBvC,MAAOS,KAAKgC,UACZpF,IAAKoD,KAAK4B,MAAMC,WAChBvC,SAAYU,KAAK2B,YACjBnD,YAAewB,KAAK4B,MAAMb,gBAC1BrC,YAAesB,KAAK4B,MAAMf,0BA1P5B+B,aCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO9G,EAAAC,EAAAC,cAAC6G,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ec205ae2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.481118ba.png\";","module.exports = __webpack_public_path__ + \"static/media/aceHeart1p.dd6518f5.png\";","module.exports = __webpack_public_path__ + \"static/media/jackHeart.02f280f3.png\";","module.exports = __webpack_public_path__ + \"static/media/kingHeart.0c076242.png\";","module.exports = __webpack_public_path__ + \"static/media/nineHeart.4d4ab9f1.png\";","module.exports = __webpack_public_path__ + \"static/media/queenHeart.4f8c8eda.png\";","module.exports = __webpack_public_path__ + \"static/media/aceSpade.873068ef.png\";","module.exports = __webpack_public_path__ + \"static/media/kingSpades.5c58acb8.png\";","module.exports = __webpack_public_path__ + \"static/media/sevenSpades.d6bdbb47.png\";","module.exports = __webpack_public_path__ + \"static/media/threeSpades1p.7fa8fcce.png\";","module.exports = __webpack_public_path__ + \"static/media/twoSpades1p.ea98a689.png\";","module.exports = __webpack_public_path__ + \"static/media/eightClub.18d69b60.png\";","module.exports = __webpack_public_path__ + \"static/media/fiveClubs1p.6881ec63.png\";","module.exports = __webpack_public_path__ + \"static/media/kingClub.b0fbeda9.png\";","module.exports = __webpack_public_path__ + \"static/media/queenClub.bb09b2ae.png\";","module.exports = __webpack_public_path__ + \"static/media/sevenClub.36528312.png\";","module.exports = __webpack_public_path__ + \"static/media/tenClubs.d75926d8.png\";","module.exports = __webpack_public_path__ + \"static/media/kingDiamond.b1157921.png\";","module.exports = __webpack_public_path__ + \"static/media/fiveDiamonds.44eecc2e.png\";","//import aceHeart from '../assets/aceHeart1p.png';\r\nexport const cards = [\r\n    {\"pic\":require(\"../assets/cover.png\"), \"value\":0, \"played\":false},\r\n\r\n    {\"pic\":require(\"../assets/aceHeart1p.png\"), \"value\":11, \"played\":false},\r\n    {\"pic\":require(\"../assets/jackHeart.png\"), \"value\":10, \"played\":false},\r\n    {\"pic\":require(\"../assets/kingHeart.png\"), \"value\":10, \"played\":false},\r\n    {\"pic\":require(\"../assets/nineHeart.png\"), \"value\":9, \"played\":false},\r\n    {\"pic\":require(\"../assets/queenHeart.png\"), \"value\":10, \"played\":false},\r\n\r\n    {\"pic\":require(\"../assets/aceSpade.png\"), \"value\":11, \"played\":false},\r\n    {\"pic\":require(\"../assets/kingSpades.png\"), \"value\":10, \"played\":false},\r\n    {\"pic\":require(\"../assets/sevenSpades.png\"), \"value\":7, \"played\":false},\r\n    {\"pic\":require(\"../assets/threeSpades1p.png\"), \"value\":3, \"played\":false}, \r\n    {\"pic\":require(\"../assets/twoSpades1p.png\"), \"value\":2, \"played\":false}, \r\n    \r\n    {\"pic\":require(\"../assets/eightClub.png\"), \"value\":8, \"played\":false},\r\n    {\"pic\":require(\"../assets/fiveClubs1p.png\"), \"value\":5, \"played\":false},\r\n    {\"pic\":require(\"../assets/kingClub.png\"), \"value\":10, \"played\":false},\r\n    {\"pic\":require(\"../assets/queenClub.png\"), \"value\":10, \"played\":false},\r\n    {\"pic\":require(\"../assets/sevenClub.png\"), \"value\":7, \"played\":false},\r\n    {\"pic\":require(\"../assets/tenClubs.png\"), \"value\":10, \"played\":false},    \r\n\r\n    {\"pic\":require(\"../assets/kingDiamond.png\"), \"value\":10, \"played\":false},\r\n    {\"pic\":require(\"../assets/fiveDiamonds.png\"), \"value\":5, \"played\":false},\r\n\r\n];","import React from 'react';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\n\r\nexport default function Nav(props){\r\n    return(\r\n        <Container>\r\n            <Row className=\"navBackground\">\r\n                <Col className=\"center primaryColor\">\r\n                Bet ${props.bet}\r\n                </Col>\r\n                <Col className=\"center primaryColor\">\r\n                    Funds ${props.money}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Container, Row, Col, Image} from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\n\r\nfunction Card(props){\r\n    return(\r\n        <Container className=\"cardStyle playArea\">\r\n            <Row>\r\n                <Col><Image src={props.cardValue} rounded fluid /></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default function CardArea(props){\r\n\r\n    return(\r\n        <Container className={`playArea ${props.bgColor}`}>\r\n            <Row>\r\n                <Col className=\"center\" xs={10}><h5>{props.tableTitle}</h5></Col>\r\n                <Col className=\"center\" xs={2}><h5>{props.total}</h5></Col>\r\n            </Row>\r\n            <Row>\r\n                {props.cardsGiven.map(function(deck, id){\r\n                    return <Card key={id} cardValue={deck.pic} />\r\n                })}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Container, Button} from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\n\r\nexport default function PrimaryButton(props){\r\n    return(\r\n        <Container>\r\n            <Button     variant=\"warning\"\r\n                        className={`buttonTextStyle ${props.size}`}\r\n                        onClick={()=>{props.action()}} >\r\n                {props.title}\r\n            </Button>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\nimport CardArea from './CardArea';\r\nimport PrimaryButton from './PrimaryButton';\r\n\r\nexport default function PlayArea(props){\r\n    return(\r\n        <Container className=\"appBackgroundColor\">\r\n            <Row>\r\n                <Col>\r\n                    <CardArea bgColor =\"dealerAreaColor\" cardsGiven = {props.dealerCards} total={props.dealerTotal} tableTitle=\"Dealer\" />\r\n                    <CardArea bgColor = \"playerAreaColor\" cardsGiven={props.playerCards} total={props.playerTotal} tableTitle=\"Player\" />\r\n                </Col>\r\n            </Row>\r\n            {props.playerTotal < 17 &&\r\n            <Row>\r\n                <Col xs={4}><PrimaryButton size=\"smallButtonSize\" title=\"Hit\" action={props.hit} /></Col>\r\n                <Col xs={8}><p className=\"instructionText\">Get another card. If your new total is over 17, you lose!</p></Col>\r\n            </Row>            \r\n            }\r\n\r\n            <Row>\r\n                <Col xs={4}><PrimaryButton size=\"smallButtonSize\" title=\"Stand\" action={props.stand} /></Col>\r\n                <Col xs={8}><p className=\"instructionText\">Click to end your turn. The dealer starts drawing cards!</p></Col>\r\n            </Row>\r\n\r\n            {props.playerTotal < 17 &&\r\n            <Row>\r\n                <Col xs={4}><PrimaryButton size=\"smallButtonSize\" title=\"Double Down\" action={props.doubleDown} /></Col>\r\n                <Col xs={8}><p className=\"instructionText\">Double your bet, get one card, and the dealer turn starts!</p></Col>\r\n            </Row>            \r\n            } \r\n                                   \r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\nimport Nav from './Nav';\r\nimport PlayArea from './PlayArea';\r\n\r\nexport default function PlayGame(props){\r\n    return(\r\n      <Container>\r\n        <Row>\r\n          <Col  xs={{span:12}} \r\n                sm={{span:10, offset:1}}\r\n                md={{span:8, offset:2}}\r\n                lg={{span:6, offset:3}}\r\n                xl={{span:6, offset:3}}>\r\n            <Nav money={props.money} bet={props.bet} />\r\n            <PlayArea hit={props.hit}\r\n                      stand = {props.stand}\r\n                      doubleDown={props.doubleDown}                    \r\n                      dealerCards={props.dealerCards} \r\n                      playerCards={props.playerCards}\r\n                      playerTotal={props.playerTotal} \r\n                      dealerTotal={props.dealerTotal} />        \r\n          </Col>\r\n        </Row>\r\n  \r\n      </Container>\r\n    );\r\n  }","import React from 'react';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\nimport PrimaryButton from './PrimaryButton';\r\n\r\nexport default function Start(props){\r\n    return(\r\n        <Container className=\"appBackgroundColor primaryColor center whiteSpaceUnderNav\">\r\n            <Row><Col><h3>Are you ready to play</h3></Col></Row>\r\n            <Row><Col><h1>Black Jack</h1></Col></Row>\r\n            <Row>\r\n                <Col    className=\"redCheque\" \r\n                        onClick={() => {props.addToBet()}} \r\n                        xs={{span:9, offset:1}} \r\n                        sm={{span:8, offset:2}}\r\n                        md={{span:6, offset:3}}\r\n                        lg={{span:6, offset:3}}\r\n                        xl={{span:6, offset:3}}\r\n                         >\r\n                            ${props.bet}\r\n                </Col>\r\n            </Row>\r\n            <Row><Col>Click the chip to increase your bet, in increments of $5, up to your bank amount of ${props.money}</Col></Row>\r\n            <Row><Col><PrimaryButton size=\"largeButtonSize\" title=\"Let's Play\" action={props.start} /></Col></Row>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\nimport Nav from './Nav';\r\nimport Start from './Start';\r\n\r\nexport default function StartGame(props){\r\n    return(\r\n      <Container>\r\n        <Row>\r\n          <Col  xs={{span:12}} \r\n                sm={{span:10, offset:1}}\r\n                md={{span:8, offset:2}}\r\n                lg={{span:6, offset:3}}\r\n                xl={{span:6, offset:3}}>\r\n            <Nav money={props.money} bet={props.bet} />\r\n            <Start start={props.start} money={props.money} bet={props.bet} addToBet={props.addToBet} />        \r\n          </Col>\r\n        </Row>\r\n  \r\n      </Container>\r\n    );\r\n  }","import React from 'react';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\nimport PrimaryButton from './PrimaryButton';\r\n\r\nexport default function Results(props){\r\n    return(\r\n        <Container className=\"appBackgroundColor primaryColor center whiteSpaceUnderNav\">\r\n            {props.gameResults === \"win\" &&\r\n                <Row className=\"whiteSpaceBetweenElements\"><Col><h1>YOU WON!!!</h1></Col></Row>\r\n            }\r\n            {props.gameResults === \"lose\" &&\r\n                <Row className=\"whiteSpaceBetweenElements\"><Col><h1>You LOSE!!!</h1></Col></Row>\r\n            }\r\n            {props.gameResults === \"push\" &&\r\n                <Row className=\"whiteSpaceBetweenElements\"><Col><h1>It was a TIE</h1></Col></Row>\r\n            }  \r\n            <Row className=\"whiteSpaceBetweenElements\">\r\n                <Col className=\"center\"><h5>Dealer</h5></Col>\r\n                <Col className=\"center\"><h5>{props.dealerTotal}</h5></Col>\r\n            </Row>\r\n            <Row className=\"whiteSpaceBetweenElements\">\r\n                <Col className=\"center\"><h5>Player</h5></Col>\r\n                <Col className=\"center\"><h5>{props.playerTotal}</h5></Col>\r\n            </Row>            \r\n            <Row className=\"whiteSpaceBetweenElements\">\r\n                <Col    className=\"smallRedCheque primaryColor\" \r\n                        onClick={() => {props.addToBet()}} \r\n                        xs={{span:9, offset:1}} \r\n                        sm={{span:8, offset:2}}\r\n                        md={{span:6, offset:3}}\r\n                        lg={{span:6, offset:3}}\r\n                        xl={{span:6, offset:3}}\r\n                         >\r\n                            ${props.bet}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"center whiteSpaceBetweenElements\">\r\n                <Col xs={12} className=\"instructionText\">Click the chip to increase your bet, in increments of $5, up to your funds limit</Col>\r\n            </Row>   \r\n            <Row className=\"whiteSpaceBetweenElements\"><Col><PrimaryButton size=\"largeButtonSize\" title=\"Let's Play\" action={props.start} /></Col></Row>       \r\n                                    \r\n            \r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\nimport Nav from './Nav';\r\nimport Results from './Results';\r\n\r\nexport default function EndGame(props){\r\n    return(\r\n      <Container>\r\n        <Row>\r\n          <Col  xs={{span:12}} \r\n                sm={{span:10, offset:1}}\r\n                md={{span:8, offset:2}}\r\n                lg={{span:6, offset:3}}\r\n                xl={{span:6, offset:3}}>\r\n            <Nav money={props.money} bet={props.bet} />\r\n            <Results playerTotal={props.playerTotal}\r\n                     gameResults = {props.gameResults}\r\n                     start={props.start}\r\n                     addToBet={props.addToBet}\r\n                     bet={props.bet} \r\n                     dealerTotal={props.dealerTotal} />\r\n          </Col>\r\n        </Row>\r\n  \r\n      </Container>\r\n    );\r\n  }","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport './App.css';\r\nimport {cards} from './component/cardDeck';\r\nimport PlayGame from './component/PlayGame';\r\nimport StartGame from './component/StartGame';\r\nimport EndGame from './component/EndGame';\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      funds:100,\r\n      startPlay: false,\r\n      results: false,\r\n      winLose: \"lose\", \r\n      currentBet: 5,\r\n      dealerStack:[],\r\n      playerStack:[],\r\n      dealerDeckTotal:0,\r\n      playerDeckTotal:0,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.dealCards();//deal two cards to player and dealer at the begining of the game\r\n  }\r\n\r\n  //At the beginning of the game the player is dealt 2 face up cards and the dealer one face up/one face down\r\n  dealCards = () =>{\r\n\r\n    let playerCards = [];//array to create player's hand of random cards and assigned to playerStack state\r\n    const playerCard1 = this.randomCard();//get a random card\r\n    let playerCard2 = this.randomCard();//get a random cad\r\n\r\n    //check if the both cards are the same, if so get another random card\r\n    if(playerCard2 === playerCard1){\r\n      playerCard2 = this.randomCard();\r\n    }\r\n\r\n    //create a temp array that will be used as the player hand and add each card\r\n    playerCards.push(cards[playerCard1]);\r\n    playerCards.push(cards[playerCard2]);\r\n\r\n    //set the cards played valued to true\r\n    cards[playerCard1].played = true;\r\n    cards[playerCard2].played = true;\r\n\r\n    let dealerCards = [];\r\n    const dealerCard1 = this.randomCard();//get a random card for the dealer\r\n\r\n    dealerCards.push(cards[dealerCard1]);//add the first card to the dealer hand\r\n    dealerCards.push(cards[0]);//add the cover card to the dealer hand\r\n\r\n    cards[dealerCard1].played = true;\r\n    cards[0].played = true;\r\n\r\n    this.setState({ playerStack: playerCards, \r\n                    dealerStack:dealerCards,\r\n                    playerDeckTotal: this.getCardPointsTotal(playerCards),\r\n                    dealerDeckTotal:this.getCardPointsTotal(dealerCards)});                                \r\n  }\r\n\r\n  //standard method for getting a random index of the cards array\r\n  randomCard = () =>{\r\n    return Math.floor(Math.random() * (cards.length -1 )) + 1;\r\n  }\r\n\r\n  //method use to add one card to either the player or dealer hand\r\n  dealACard = (stackOfCards) =>{\r\n    let hand = stackOfCards;//get the current array of card objects\r\n    let cardNumber = this.randomCard();//get a random card index number\r\n\r\n    //check if card have been played already\r\n    if(cards[cardNumber].played){\r\n      cardNumber = this.randomCard();\r\n      cards[cardNumber].played = true;\r\n    }else{\r\n      cards[cardNumber].played = true;\r\n    }\r\n\r\n    hand.push(cards[cardNumber]);//add the card object from the cards array based on the index number\r\n \r\n    this.setState({stackOfCards:hand});//update the current array of cards objects\r\n    \r\n  }\r\n\r\n  //Get a sum of all cards worth and update the state\r\n  getCardPointsTotal = (deck)=>{\r\n    \r\n    let total = 0;\r\n    let foundAces = 0;\r\n\r\n    //loop through each card adding the value to \"total\". Keep track of all values that is 11 to add up later\r\n    for(var i=0;i<deck.length;i++){\r\n      if(deck[i].value === 11){//if the value is a 11, track it but don't add\r\n        foundAces ++; \r\n      }else {\r\n        total += deck[i].value;//add the value to total\r\n      }\r\n      \r\n    }\r\n\r\n    if(foundAces > 0){//if the number of Aces is more then 0, \r\n      for(var j=0;j<foundAces;j++){//loop through the number of Aces\r\n               \r\n        if((total + 11) > 21){//if the total of all cards including the Ace is over 21, add the Ace as a 2\r\n          total += 2;\r\n        }else {\r\n          total += 11;//if the total of all cards including the Ace is under 21, add the Ace as a 11\r\n        }       \r\n      }\r\n    }\r\n\r\n\r\n    return total;\r\n  }\r\n\r\n  //method to increase the bet amount up to the fund limit. If the bet amount is greater then fund\r\n  //then the bet amount start over at 5.\r\n  increaseBet = () =>{\r\n    if(this.state.currentBet >= this.state.funds){\r\n      this.setState({currentBet:5});     \r\n    }else {\r\n      this.setState(previousState => ({\r\n        currentBet: previousState.currentBet + 5,\r\n      }));\r\n    }\r\n  }  \r\n\r\n  //called from the start button on the Start Game component to start the game\r\n  startGame = () =>{\r\n    this.setState({startPlay:true, results:false});\r\n    this.dealCards();\r\n  }\r\n\r\n  //Show the Results component\r\n  endGame = () =>{\r\n    let gameResults = \"lose\";\r\n\r\n    //if the player has less then 21 but more then the dealer or the dealer has bust but the player has not then the player win\r\n    if((this.state.playerDeckTotal <= 21 && this.state.playerDeckTotal > this.state.dealerDeckTotal) || (this.state.dealerDeckTotal > 21 && this.state.playerDeckTotal <= 21)){\r\n      gameResults = \"win\";//return that the player won\r\n\r\n      //player win the money bet\r\n      this.setState(previousState => ({\r\n        funds: previousState.funds + this.state.currentBet,\r\n      }));\r\n    }else if(this.state.playerDeckTotal === this.state.dealerDeckTotal){\r\n      gameResults = \"push\";//return that the game was tie\r\n    }else{\r\n      gameResults = \"lose\";//return that the player lost\r\n\r\n      //player lose the money bet\r\n      this.setState(previousState => ({\r\n        funds: previousState.funds - this.state.currentBet,\r\n      }));      \r\n    }  \r\n    //switch to the EndGame component with results of the game\r\n    this.setState({results:true, startPlay:false, winLose:gameResults});\r\n  }\r\n\r\n  //deals cards to the dealer till get a soft 17 or one card over\r\n  dealerHand = () =>{\r\n    let hand = this.state.dealerStack;//get the current dealer's hand\r\n    hand.pop();//uncover the card by removing the \"cover\" card \r\n    \r\n    let currentTotal = this.state.dealerDeckTotal;//get current sum of dealer's hand\r\n\r\n    //Add card to the dealer hand as long as the sum of the dealer's and is less then or equal to 17\r\n    do{\r\n      \r\n      this.dealACard(this.state.dealerStack);//deal the dealer one card\r\n\r\n      //update the dealer's hand total points\r\n      this.setState({dealerDeckTotal: this.getCardPointsTotal(this.state.dealerStack)});  \r\n\r\n      //update currentTotal\r\n      currentTotal = this.getCardPointsTotal(this.state.dealerStack);\r\n\r\n    }while(currentTotal < 17)\r\n    \r\n    setTimeout(()=>{this.endGame()}, 2000);\r\n  }\r\n\r\n  //Add a card to the player deck stack if the hand's sum is under or equal to 17\r\n  playerHit = () =>{\r\n\r\n    //if hand's sum is under or equal to 17 add one card\r\n    if(this.state.playerDeckTotal <= 17){\r\n      this.dealACard(this.state.playerStack);//deal the player one card\r\n    }\r\n\r\n    //update the player's hand total points\r\n    this.setState({playerDeckTotal: this.getCardPointsTotal(this.state.playerStack)});    \r\n\r\n    //Bug Fixed: need a up to date total\r\n    const currentTotal = this.getCardPointsTotal(this.state.playerStack);\r\n\r\n    //if hand's sum is greater then 17 then its the dealer turn\r\n    if(currentTotal > 17){\r\n      this.dealerHand();//get cards for the dealer\r\n    }\r\n\r\n  }\r\n\r\n  //The player use their current points and allow the dealer to take a turn\r\n  playerStand = () =>{\r\n    this.dealerHand();   \r\n  }\r\n\r\n  //The player double their bet (or go all in), receive one card, and end their turn.\r\n  playerDoubleDown = () =>{\r\n\r\n    this.dealACard(this.state.playerStack);//deal the player one card \r\n    \r\n    //update the player's hand total points\r\n    this.setState({playerDeckTotal: this.getCardPointsTotal(this.state.playerStack)});\r\n    \r\n    //double the bet unless that amount is more then the player funds. If so, bet the entire funds amount\r\n    if((this.state.currentBet*2) > this.state.funds){\r\n        this.setState({currentBet:this.state.funds})\r\n    }else{\r\n      this.setState(previousState => ({\r\n        currentBet: previousState.currentBet * 2,\r\n      }));\r\n    }\r\n\r\n    this.dealerHand();//Deal the dealer a hand\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Container>\r\n        {this.state.startPlay === false && this.state.results ===false &&\r\n        <StartGame  money={this.state.funds}\r\n                    start={this.startGame}\r\n                    addToBet = {this.increaseBet}\r\n                    bet={this.state.currentBet} />\r\n        }\r\n        {this.state.startPlay === true && this.state.results ===false &&\r\n          <PlayGame money={this.state.funds}\r\n                    hit={this.playerHit}\r\n                    stand={this.playerStand}\r\n                    doubleDown={this.playerDoubleDown}\r\n                    bet={this.state.currentBet}\r\n                    dealerTotal = {this.state.dealerDeckTotal}\r\n                    playerTotal = {this.state.playerDeckTotal} \r\n                    dealerCards={this.state.dealerStack} \r\n                    playerCards={this.state.playerStack} />\r\n        }\r\n        {this.state.results === true &&\r\n          <EndGame  gameResults = {this.state.winLose}\r\n                    money={this.state.funds}\r\n                    start={this.startGame}          \r\n                    bet={this.state.currentBet}\r\n                    addToBet = {this.increaseBet}\r\n                    dealerTotal = {this.state.dealerDeckTotal}\r\n                    playerTotal = {this.state.playerDeckTotal} />\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}